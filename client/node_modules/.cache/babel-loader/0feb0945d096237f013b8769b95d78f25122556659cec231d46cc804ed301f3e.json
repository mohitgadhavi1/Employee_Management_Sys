{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { signupManager as signupManagerUrl, loginManager as loginManagerUrl } from \"../services\";\nimport { useState } from 'react';\nexport const useSignupUser = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const signupManager = async newManager => {\n    setLoading(true);\n    try {\n      const response = await fetch(signupManagerUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newEmployee)\n      });\n      if (!response.ok) {\n        throw new Error('Manager signup failed');\n      }\n\n      // Handle successful signup\n      console.log('Manager signed up successfully');\n    } catch (error) {\n      // Handle signup error\n      setError(error.message);\n      console.error('Manager signup failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    signupManager,\n    loading,\n    error\n  };\n};\n_s(useSignupUser, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\nexport const useLoginUser = () => {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const loginUser = async newManager => {\n    setLoading(true);\n    try {\n      const response = await fetch(signupManagerUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newEmployee)\n      });\n      if (!response.ok) {\n        throw new Error('Manager signup failed');\n      }\n\n      // Handle successful signup\n      console.log('Manager signed up successfully');\n    } catch (error) {\n      // Handle signup error\n      setError(error.message);\n      console.error('Manager signup failed:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    signupManager,\n    loading,\n    error\n  };\n};\n_s2(useLoginUser, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["signupManager","signupManagerUrl","loginManager","loginManagerUrl","useState","useSignupUser","_s","loading","setLoading","error","setError","newManager","response","fetch","method","headers","body","JSON","stringify","newEmployee","ok","Error","console","log","message","useLoginUser","_s2","loginUser"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/hooks/useAuthApi.js"],"sourcesContent":["import {\r\n\r\n  signupManager as signupManagerUrl,\r\n  loginManager as loginManagerUrl,\r\n} from \"../services\";\r\n\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport const useSignupUser = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const signupManager = async (newManager) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(signupManagerUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newEmployee),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Manager signup failed');\r\n        }\r\n  \r\n        // Handle successful signup\r\n        console.log('Manager signed up successfully');\r\n      } catch (error) {\r\n        // Handle signup error\r\n        setError(error.message);\r\n        console.error('Manager signup failed:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    return { signupManager, loading, error };\r\n  };\r\n\r\n\r\n  export const useLoginUser = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const loginUser = async (newManager) => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(signupManagerUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(newEmployee),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Manager signup failed');\r\n        }\r\n  \r\n        // Handle successful signup\r\n        console.log('Manager signed up successfully');\r\n      } catch (error) {\r\n        // Handle signup error\r\n        setError(error.message);\r\n        console.error('Manager signup failed:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    return { signupManager, loading, error };\r\n  };"],"mappings":";;AAAA,SAEEA,aAAa,IAAIC,gBAAgB,EACjCC,YAAY,IAAIC,eAAe,QAC1B,aAAa;AAEpB,SAASC,QAAQ,QAAQ,OAAO;AAIhC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMJ,aAAa,GAAG,MAAOW,UAAU,IAAK;IAC1CH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACZ,gBAAgB,EAAE;QAC7Ca,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;;MAEA;MACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAK,EAAE;MACd;MACAC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;MACvBF,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAER,aAAa;IAAEO,OAAO;IAAEE;EAAM,CAAC;AAC1C,CAAC;AAACH,EAAA,CA/BSD,aAAa;AAkCxB,OAAO,MAAMoB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAM,CAACnB,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMuB,SAAS,GAAG,MAAOhB,UAAU,IAAK;IACtCH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACZ,gBAAgB,EAAE;QAC7Ca,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;;MAEA;MACAC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOd,KAAK,EAAE;MACd;MACAC,QAAQ,CAACD,KAAK,CAACe,OAAO,CAAC;MACvBF,OAAO,CAACb,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAER,aAAa;IAAEO,OAAO;IAAEE;EAAM,CAAC;AAC1C,CAAC;AAACiB,GAAA,CA/BWD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}