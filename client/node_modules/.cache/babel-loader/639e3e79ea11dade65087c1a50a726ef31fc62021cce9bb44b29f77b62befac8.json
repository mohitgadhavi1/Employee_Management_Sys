{"ast":null,"code":"// src/hooks/useFetchEmployeeList.js\nimport{useState,useEffect}from\"react\";import{employeeList as employeeListUrl,department as departmentListUrl}from\"../services\";export const useFetchEmployeeList=()=>{const[employeeList,setEmployeeList]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{const fetchEmployeeList=async()=>{setLoading(true);try{const response=await fetch(employeeListUrl);if(!response.ok){throw new Error(\"Failed to fetch employee list\");}const data=await response.json();setEmployeeList(data);}catch(error){setError(error.message);console.error(\"Error fetching employee list:\",error);}finally{setLoading(false);}};fetchEmployeeList();},[]);return{employeeList,loading,error};};export const useFetchDepartmentList=()=>{const[departmentList,setDepartmentList]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);useEffect(()=>{const fetchDepartmentList=async()=>{setLoading(true);try{const response=await fetch(departmentListUrl);if(!response.ok){throw new Error(\"Failed to fetch Department list\");}const data=await response.json();setDepartmentList(data);}catch(error){setError(error.message);console.error(\"Error fetching Department list:\",error);}finally{setLoading(false);}};fetchDepartmentList();},[]);return{departmentList,loading,error};};","map":{"version":3,"names":["useState","useEffect","employeeList","employeeListUrl","department","departmentListUrl","useFetchEmployeeList","setEmployeeList","loading","setLoading","error","setError","fetchEmployeeList","response","fetch","ok","Error","data","json","message","console","useFetchDepartmentList","departmentList","setDepartmentList","fetchDepartmentList"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/hooks/useFetchDetails.js"],"sourcesContent":["// src/hooks/useFetchEmployeeList.js\r\nimport { useState, useEffect } from \"react\";\r\nimport { employeeList as employeeListUrl ,department as departmentListUrl} from \"../services\";\r\n\r\n\r\n\r\nexport const useFetchEmployeeList = () => {\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployeeList = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(employeeListUrl);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch employee list\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEmployeeList(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        console.error(\"Error fetching employee list:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployeeList();\r\n  }, []);\r\n\r\n  return { employeeList, loading, error };\r\n};\r\n\r\n\r\nexport const useFetchDepartmentList = () => {\r\n    const [departmentList, setDepartmentList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchDepartmentList = async () => {\r\n        setLoading(true);\r\n  \r\n        try {\r\n          const response = await fetch(departmentListUrl);\r\n  \r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to fetch Department list\");\r\n          }\r\n  \r\n          const data = await response.json();\r\n          setDepartmentList(data);\r\n        } catch (error) {\r\n          setError(error.message);\r\n          console.error(\"Error fetching Department list:\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchDepartmentList();\r\n    }, []);\r\n  \r\n    return { departmentList, loading, error };\r\n  };"],"mappings":"AAAA;AACA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,OAASC,YAAY,GAAI,CAAAC,eAAe,CAAEC,UAAU,GAAI,CAAAC,iBAAiB,KAAO,aAAa,CAI7F,MAAO,MAAM,CAAAC,oBAAoB,CAAGA,CAAA,GAAM,CACxC,KAAM,CAACJ,YAAY,CAAEK,eAAe,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpCH,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACX,eAAe,CAAC,CAE7C,GAAI,CAACU,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,+BAA+B,CAAC,CAClD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCX,eAAe,CAACU,IAAI,CAAC,CACvB,CAAE,MAAOP,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CACvBC,OAAO,CAACV,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACvD,CAAC,OAAS,CACRD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEV,YAAY,CAAEM,OAAO,CAAEE,KAAM,CAAC,CACzC,CAAC,CAGD,MAAO,MAAM,CAAAW,sBAAsB,CAAGA,CAAA,GAAM,CACxC,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAuB,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtCf,UAAU,CAAC,IAAI,CAAC,CAEhB,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACT,iBAAiB,CAAC,CAE/C,GAAI,CAACQ,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,iCAAiC,CAAC,CACpD,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCK,iBAAiB,CAACN,IAAI,CAAC,CACzB,CAAE,MAAOP,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CACvBC,OAAO,CAACV,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CAAC,OAAS,CACRD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDe,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAEF,cAAc,CAAEd,OAAO,CAAEE,KAAM,CAAC,CAC3C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}