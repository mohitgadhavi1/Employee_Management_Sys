{"ast":null,"code":"import{signupUser as signupUserUrl,loginUser as loginUserUrl}from\"../services\";import{useState}from\"react\";export const useSignupUser=()=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const signupUser=async newUser=>{setLoading(true);try{const response=await fetch(signupUserUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(newUser)});if(!response.ok){throw new Error(\"User signup failed\");}// Handle successful signup\nconsole.log(\"User signed up successfully\");}catch(error){// Handle signup error\nsetError(error.message);console.error(\"User signup failed:\",error);}finally{setLoading(false);}};return{signupUser,loading,error};};export const useLoginUser=()=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const loginUser=async existingUser=>{setLoading(true);try{const response=await fetch(loginUserUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(existingUser)});if(!response.ok){throw new Error(\"User login failed\");}// Handle successful signup\nconsole.log(\"User login up successfully\");}catch(error){// Handle signup error\nsetError(error.message);console.error(\"User login failed:\",error.message);}finally{setLoading(false);}};return{loginUser,loading,error};};","map":{"version":3,"names":["signupUser","signupUserUrl","loginUser","loginUserUrl","useState","useSignupUser","loading","setLoading","error","setError","newUser","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","message","useLoginUser","existingUser"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/hooks/useAuthApi.js"],"sourcesContent":["import {\r\n  signupUser as signupUserUrl,\r\n  loginUser as loginUserUrl,\r\n} from \"../services\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport const useSignupUser = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const signupUser = async (newUser) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(signupUserUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"User signup failed\");\r\n      }\r\n\r\n      // Handle successful signup\r\n      console.log(\"User signed up successfully\");\r\n    } catch (error) {\r\n      // Handle signup error\r\n      setError(error.message);\r\n      console.error(\"User signup failed:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { signupUser, loading, error };\r\n};\r\n\r\nexport const useLoginUser = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginUser = async (existingUser) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(loginUserUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(existingUser),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"User login failed\");\r\n      }\r\n\r\n      // Handle successful signup\r\n      console.log(\"User login up successfully\");\r\n    } catch (error) {\r\n      // Handle signup error\r\n      setError(error.message);\r\n      console.error(\"User login failed:\", error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { loginUser, loading, error };\r\n};\r\n"],"mappings":"AAAA,OACEA,UAAU,GAAI,CAAAC,aAAa,CAC3BC,SAAS,GAAI,CAAAC,YAAY,KACpB,aAAa,CAEpB,OAASC,QAAQ,KAAQ,OAAO,CAEhC,MAAO,MAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACjC,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGH,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACI,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAJ,UAAU,CAAG,KAAO,CAAAU,OAAO,EAAK,CACpCH,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACX,aAAa,CAAE,CAC1CY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACP,OAAO,CAC9B,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoB,CAAC,CACvC,CAEA;AACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC5C,CAAE,MAAOb,KAAK,CAAE,CACd;AACAC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC,CACvBF,OAAO,CAACZ,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CAAC,OAAS,CACRD,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CAAEP,UAAU,CAAEM,OAAO,CAAEE,KAAM,CAAC,CACvC,CAAC,CAED,MAAO,MAAM,CAAAe,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAACjB,OAAO,CAAEC,UAAU,CAAC,CAAGH,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACI,KAAK,CAAEC,QAAQ,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAF,SAAS,CAAG,KAAO,CAAAsB,YAAY,EAAK,CACxCjB,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACT,YAAY,CAAE,CACzCU,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACO,YAAY,CACnC,CAAC,CAAC,CAEF,GAAI,CAACb,QAAQ,CAACO,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,mBAAmB,CAAC,CACtC,CAEA;AACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAC3C,CAAE,MAAOb,KAAK,CAAE,CACd;AACAC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC,CACvBF,OAAO,CAACZ,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAACc,OAAO,CAAC,CACpD,CAAC,OAAS,CACRf,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,MAAO,CAAEL,SAAS,CAAEI,OAAO,CAAEE,KAAM,CAAC,CACtC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}