{"ast":null,"code":"// src/reducers/employeeSlice.js\nimport{createSlice}from\"@reduxjs/toolkit\";const employeeSlice=createSlice({name:\"employees\",initialState:[{id:1,name:\"John Doe\",email:\"john.doe@example.com\",position:\"Developer\",department:null},{id:2,name:\"Jane Doe\",email:\"jane.doe@example.com\",position:\"Designer\",department:null}// Add more initial employees as needed\n],reducers:{assignDepartment:(state,action)=>{const{employeeId,departmentId}=action.payload;const employeeIndex=state.findIndex(employee=>employee.id===employeeId);if(employeeIndex!==-1){state[employeeIndex].department=departmentId;}}}});export const{assignDepartment}=employeeSlice.actions;export default employeeSlice.reducer;","map":{"version":3,"names":["createSlice","employeeSlice","name","initialState","id","email","position","department","reducers","assignDepartment","state","action","employeeId","departmentId","payload","employeeIndex","findIndex","employee","actions","reducer"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/store/features/employeeSlice.js"],"sourcesContent":["// src/reducers/employeeSlice.js\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst employeeSlice = createSlice({\r\n  name: \"employees\",\r\n  initialState: [\r\n    {\r\n      id: 1,\r\n      name: \"John Doe\",\r\n      email: \"john.doe@example.com\",\r\n      position: \"Developer\",\r\n      department: null,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Jane Doe\",\r\n      email: \"jane.doe@example.com\",\r\n      position: \"Designer\",\r\n      department: null,\r\n    },\r\n    // Add more initial employees as needed\r\n  ],\r\n  reducers: {\r\n    assignDepartment: (state, action) => {\r\n      const { employeeId, departmentId } = action.payload;\r\n      const employeeIndex = state.findIndex(\r\n        (employee) => employee.id === employeeId\r\n      );\r\n      if (employeeIndex !== -1) {\r\n        state[employeeIndex].department = departmentId;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { assignDepartment } = employeeSlice.actions;\r\nexport default employeeSlice.reducer;\r\n"],"mappings":"AAAA;AACA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,aAAa,CAAGD,WAAW,CAAC,CAChCE,IAAI,CAAE,WAAW,CACjBC,YAAY,CAAE,CACZ,CACEC,EAAE,CAAE,CAAC,CACLF,IAAI,CAAE,UAAU,CAChBG,KAAK,CAAE,sBAAsB,CAC7BC,QAAQ,CAAE,WAAW,CACrBC,UAAU,CAAE,IACd,CAAC,CACD,CACEH,EAAE,CAAE,CAAC,CACLF,IAAI,CAAE,UAAU,CAChBG,KAAK,CAAE,sBAAsB,CAC7BC,QAAQ,CAAE,UAAU,CACpBC,UAAU,CAAE,IACd,CACA;AAAA,CACD,CACDC,QAAQ,CAAE,CACRC,gBAAgB,CAAEA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACnC,KAAM,CAAEC,UAAU,CAAEC,YAAa,CAAC,CAAGF,MAAM,CAACG,OAAO,CACnD,KAAM,CAAAC,aAAa,CAAGL,KAAK,CAACM,SAAS,CAClCC,QAAQ,EAAKA,QAAQ,CAACb,EAAE,GAAKQ,UAChC,CAAC,CACD,GAAIG,aAAa,GAAK,CAAC,CAAC,CAAE,CACxBL,KAAK,CAACK,aAAa,CAAC,CAACR,UAAU,CAAGM,YAAY,CAChD,CACF,CACF,CACF,CAAC,CAAC,CAEF,MAAO,MAAM,CAAEJ,gBAAiB,CAAC,CAAGR,aAAa,CAACiB,OAAO,CACzD,cAAe,CAAAjB,aAAa,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}