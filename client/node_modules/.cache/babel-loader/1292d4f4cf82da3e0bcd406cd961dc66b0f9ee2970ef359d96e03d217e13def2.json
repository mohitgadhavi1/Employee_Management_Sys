{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/hooks/useFetchEmployeeList.js\nimport { useState, useEffect } from \"react\";\nimport { employeeList as employeeListUrl, department as departmentListUrl } from \"../services\";\nexport const useFetchEmployeeList = () => {\n  _s();\n  const [employeeList, setEmployeeList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeList = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(employeeListUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch employee list\");\n        }\n        const data = await response.json();\n        setEmployeeList(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching employee list:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployeeList();\n  }, [endpoint]);\n  return {\n    employeeList,\n    loading,\n    error\n  };\n};\n_s(useFetchEmployeeList, \"ecFWkriXK2TNmSLOMNiYEBpG4OY=\");\nexport const useFetchDepartmentList = () => {\n  _s2();\n  const [employeeList, setEmployeeList] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchEmployeeList = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(departmentListUrl);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch Department list\");\n        }\n        const data = await response.json();\n        setEmployeeList(data);\n      } catch (error) {\n        setError(error.message);\n        console.error(\"Error fetching Department list:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployeeList();\n  }, [endpoint]);\n  return {\n    employeeList,\n    loading,\n    error\n  };\n};\n_s2(useFetchDepartmentList, \"ecFWkriXK2TNmSLOMNiYEBpG4OY=\");","map":{"version":3,"names":["useState","useEffect","employeeList","employeeListUrl","department","departmentListUrl","useFetchEmployeeList","_s","setEmployeeList","loading","setLoading","error","setError","fetchEmployeeList","response","fetch","ok","Error","data","json","message","console","endpoint","useFetchDepartmentList","_s2"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/hooks/useFetchDetails.js"],"sourcesContent":["// src/hooks/useFetchEmployeeList.js\r\nimport { useState, useEffect } from \"react\";\r\nimport { employeeList as employeeListUrl ,department as departmentListUrl} from \"../services\";\r\n\r\n\r\n\r\nexport const useFetchEmployeeList = () => {\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchEmployeeList = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(employeeListUrl);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch employee list\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEmployeeList(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        console.error(\"Error fetching employee list:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployeeList();\r\n  }, [endpoint]);\r\n\r\n  return { employeeList, loading, error };\r\n};\r\n\r\n\r\nexport const useFetchDepartmentList = () => {\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const fetchEmployeeList = async () => {\r\n        setLoading(true);\r\n  \r\n        try {\r\n          const response = await fetch(departmentListUrl);\r\n  \r\n          if (!response.ok) {\r\n            throw new Error(\"Failed to fetch Department list\");\r\n          }\r\n  \r\n          const data = await response.json();\r\n          setEmployeeList(data);\r\n        } catch (error) {\r\n          setError(error.message);\r\n          console.error(\"Error fetching Department list:\", error);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchEmployeeList();\r\n    }, [endpoint]);\r\n  \r\n    return { employeeList, loading, error };\r\n  };"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,IAAIC,eAAe,EAAEC,UAAU,IAAIC,iBAAiB,QAAO,aAAa;AAI7F,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM,CAACL,YAAY,EAAEM,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpCH,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACZ,eAAe,CAAC;QAE7C,IAAI,CAACW,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;QAClD;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;QACvBC,OAAO,CAACV,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEpB,YAAY;IAAEO,OAAO;IAAEE;EAAM,CAAC;AACzC,CAAC;AAACJ,EAAA,CA9BWD,oBAAoB;AAiCjC,OAAO,MAAMiB,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACxC,MAAM,CAACtB,YAAY,EAAEM,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpCH,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,iBAAiB,CAAC;QAE/C,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;QACpD;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,eAAe,CAACU,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;QACvBC,OAAO,CAACV,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEpB,YAAY;IAAEO,OAAO;IAAEE;EAAM,CAAC;AACzC,CAAC;AAACa,GAAA,CA9BSD,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}