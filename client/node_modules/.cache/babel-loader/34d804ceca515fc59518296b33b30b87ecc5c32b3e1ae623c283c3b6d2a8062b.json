{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { signupUser as signupUserUrl, loginUser as loginUserUrl } from \"../services\";\nimport { useState } from \"react\";\nexport const useSignupUser = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const signupUser = async newUser => {\n    setLoading(true);\n    try {\n      const response = await fetch(signupUserUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newUser)\n      });\n      if (!response.ok) {\n        throw new Error(\"User signup failed\");\n      }\n\n      // Handle successful signup\n      console.log(\"User signed up successfully\");\n    } catch (error) {\n      // Handle signup error\n      setError(error.message);\n      console.error(\"User signup failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    signupUser,\n    loading,\n    error\n  };\n};\n_s(useSignupUser, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\nexport const useLoginUser = () => {\n  _s2();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const loginUser = async existingUser => {\n    setLoading(true);\n    try {\n      const response = await fetch(loginUserUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(existingUser)\n      });\n      if (!response.ok) {\n        throw new Error(\"User login failed\");\n      }\n\n      // Handle successful signup\n      console.log(\"User login up successfully\");\n    } catch (error) {\n      // Handle signup error\n      setError(error.message);\n      console.error(\"User login failed:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    loginUser,\n    loading,\n    error\n  };\n};\n_s2(useLoginUser, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");","map":{"version":3,"names":["signupUser","signupUserUrl","loginUser","loginUserUrl","useState","useSignupUser","_s","loading","setLoading","error","setError","newUser","response","fetch","method","headers","body","JSON","stringify","ok","Error","console","log","message","useLoginUser","_s2","existingUser"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/hooks/useAuthApi.js"],"sourcesContent":["import {\r\n  signupUser as signupUserUrl,\r\n  loginUser as loginUserUrl,\r\n} from \"../services\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport const useSignupUser = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const signupUser = async (newUser) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(signupUserUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(newUser),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"User signup failed\");\r\n      }\r\n\r\n      // Handle successful signup\r\n      console.log(\"User signed up successfully\");\r\n    } catch (error) {\r\n      // Handle signup error\r\n      setError(error.message);\r\n      console.error(\"User signup failed:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { signupUser, loading, error };\r\n};\r\n\r\nexport const useLoginUser = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const loginUser = async (existingUser) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(loginUserUrl, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(existingUser),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"User login failed\");\r\n      }\r\n\r\n      // Handle successful signup\r\n      console.log(\"User login up successfully\");\r\n    } catch (error) {\r\n      // Handle signup error\r\n      setError(error.message);\r\n      console.error(\"User login failed:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { loginUser, loading, error };\r\n};\r\n"],"mappings":";;AAAA,SACEA,UAAU,IAAIC,aAAa,EAC3BC,SAAS,IAAIC,YAAY,QACpB,aAAa;AAEpB,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMJ,UAAU,GAAG,MAAOW,OAAO,IAAK;IACpCH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACZ,aAAa,EAAE;QAC1Ca,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;;MAEA;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd;MACAC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;MACvBF,OAAO,CAACZ,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAER,UAAU;IAAEO,OAAO;IAAEE;EAAM,CAAC;AACvC,CAAC;AAACH,EAAA,CA/BWD,aAAa;AAiC1B,OAAO,MAAMmB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAM,CAAClB,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMF,SAAS,GAAG,MAAOwB,YAAY,IAAK;IACxClB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,YAAY,EAAE;QACzCW,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,YAAY;MACnC,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACtC;;MAEA;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd;MACAC,QAAQ,CAACD,KAAK,CAACc,OAAO,CAAC;MACvBF,OAAO,CAACZ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,SAAS;MACRD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAEN,SAAS;IAAEK,OAAO;IAAEE;EAAM,CAAC;AACtC,CAAC;AAACgB,GAAA,CA/BWD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}