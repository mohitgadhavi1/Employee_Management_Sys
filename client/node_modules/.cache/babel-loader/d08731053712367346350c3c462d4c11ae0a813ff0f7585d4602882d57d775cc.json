{"ast":null,"code":"// src/reducers/employeeSlice.js\nimport { createSlice } from '@reduxjs/toolkit';\nconst employeeSlice = createSlice({\n  name: 'employees',\n  initialState: [{\n    id: 1,\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    position: 'Developer',\n    department: null\n  }, {\n    id: 2,\n    name: 'Jane Doe',\n    email: 'jane.doe@example.com',\n    position: 'Designer',\n    department: null\n  }\n  // Add more initial employees as needed\n  ],\n  reducers: {\n    assignDepartment: (state, action) => {\n      const {\n        employeeId,\n        departmentId\n      } = action.payload;\n      const employeeIndex = state.findIndex(employee => employee.id === employeeId);\n      if (employeeIndex !== -1) {\n        state[employeeIndex].department = departmentId;\n      }\n    }\n    // Additional actions for adding, updating, and deleting employees if needed\n  }\n});\nexport const {\n  assignDepartment\n} = employeeSlice.actions;\nexport default employeeSlice.reducer;","map":{"version":3,"names":["createSlice","employeeSlice","name","initialState","id","email","position","department","reducers","assignDepartment","state","action","employeeId","departmentId","payload","employeeIndex","findIndex","employee","actions","reducer"],"sources":["C:/Users/mohit/OneDrive/Desktop/Work/personal/IPANGRAM MERN TEST/client/src/store/features/employeeSlice.js"],"sourcesContent":["// src/reducers/employeeSlice.js\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst employeeSlice = createSlice({\r\n  name: 'employees',\r\n  initialState: [\r\n    { id: 1, name: 'John Doe', email: 'john.doe@example.com', position: 'Developer', department: null },\r\n    { id: 2, name: 'Jane Doe', email: 'jane.doe@example.com', position: 'Designer', department: null },\r\n    // Add more initial employees as needed\r\n  ],\r\n  reducers: {\r\n    assignDepartment: (state, action) => {\r\n      const { employeeId, departmentId } = action.payload;\r\n      const employeeIndex = state.findIndex((employee) => employee.id === employeeId);\r\n      if (employeeIndex !== -1) {\r\n        state[employeeIndex].department = departmentId;\r\n      }\r\n    },\r\n    // Additional actions for adding, updating, and deleting employees if needed\r\n  },\r\n});\r\n\r\nexport const { assignDepartment } = employeeSlice.actions;\r\nexport default employeeSlice.reducer;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAGD,WAAW,CAAC;EAChCE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE,UAAU;IAAEG,KAAK,EAAE,sBAAsB;IAAEC,QAAQ,EAAE,WAAW;IAAEC,UAAU,EAAE;EAAK,CAAC,EACnG;IAAEH,EAAE,EAAE,CAAC;IAAEF,IAAI,EAAE,UAAU;IAAEG,KAAK,EAAE,sBAAsB;IAAEC,QAAQ,EAAE,UAAU;IAAEC,UAAU,EAAE;EAAK;EACjG;EAAA,CACD;EACDC,QAAQ,EAAE;IACRC,gBAAgB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnC,MAAM;QAAEC,UAAU;QAAEC;MAAa,CAAC,GAAGF,MAAM,CAACG,OAAO;MACnD,MAAMC,aAAa,GAAGL,KAAK,CAACM,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACb,EAAE,KAAKQ,UAAU,CAAC;MAC/E,IAAIG,aAAa,KAAK,CAAC,CAAC,EAAE;QACxBL,KAAK,CAACK,aAAa,CAAC,CAACR,UAAU,GAAGM,YAAY;MAChD;IACF;IACA;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAiB,CAAC,GAAGR,aAAa,CAACiB,OAAO;AACzD,eAAejB,aAAa,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}